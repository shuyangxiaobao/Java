<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!--<bean id="logger" class="com.itheima.utils.Logger">-->
        <!--<property name="txmanager" ref="txManager"></property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;配置AOP&ndash;&gt;-->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 配置切入点表达式 id属性用于指定表达式的唯一标识。expression属性用于指定表达式内容-->
              <!--此标签写在aop:aspect标签内部只能当前切面使用。-->
              <!--它还可以写在aop:aspect外面，此时就变成了所有切面可用-->
          <!--&ndash;&gt;-->
        <!--<aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.*.*(..))"></aop:pointcut>-->
        <!--&lt;!&ndash;配置切面 &ndash;&gt;-->
        <!--<aop:aspect id="logAdvice" ref="logger">-->
            <!--&lt;!&ndash;&lt;!&ndash; 配置前置通知：在切入点方法执行之前执行&ndash;&gt;&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:before method="beforePrintLog" pointcut-ref="pt1" ></aop:before>&ndash;&gt;-->

            <!--&lt;!&ndash;&lt;!&ndash; 配置后置通知：在切入点方法正常执行之后值。它和异常通知永远只能执行一个&ndash;&gt;&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>&ndash;&gt;-->

            <!--&lt;!&ndash;&lt;!&ndash; 配置异常通知：在切入点方法执行产生异常之后执行。它和后置通知永远只能执行一个&ndash;&gt;&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>&ndash;&gt;-->

            <!--&lt;!&ndash;&lt;!&ndash;配置最终通知：无论切入点方法是否正常执行它都会在其后面执行&ndash;&gt;&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>&ndash;&gt;-->

            <!--&lt;!&ndash; 配置环绕通知 详细的注释请看Logger类中&ndash;&gt;-->
            <!--<aop:around method="aroundPringLog" pointcut-ref="pt1"></aop:around>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


<context:component-scan base-package="com.itheima"></context:component-scan>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>






    <!--配置代理的service-->
    <bean id="proxyAccountService" factory-bean="beanFactory" factory-method="getAccountService"></bean>

    <!--配置beanfactory-->
    <bean id="beanFactory" class="com.itheima.factory.BeanFactory">
        <!-- 注入service -->
        <property name="accountService" ref="accountService"></property>
        <!-- 注入事务管理器 -->
        <property name="txManager" ref="txManager"></property>
    </bean>

     <!-- 配置Service -->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl">
        <!-- 注入dao -->
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!--配置Dao对象-->
    <bean id="accountDao" class="com.itheima.dao.impl.AccountDaoImpl">
        <!-- 注入QueryRunner -->
        <property name="runner" ref="runner"></property>
        <!-- 注入ConnectionUtils -->
        <property name="connectionUtils" ref="connectionUtils"></property>
    </bean>

    <!--配置QueryRunner-->
    <bean id="runner" class="org.apache.commons.dbutils.QueryRunner" scope="prototype"></bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--连接数据库的必备信息-->
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/spring"></property>
        <property name="user" value="root"></property>
        <property name="password" value="123456abc"></property>
    </bean>

    <!-- 配置Connection的工具类 ConnectionUtils -->
    <bean id="connectionUtils" class="com.itheima.utils.ConnectionUtils">
        <!-- 注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置事务管理器-->
    <bean id="txManager" class="com.itheima.utils.TransactionManager">
        <!-- 注入ConnectionUtils -->
        <property name="connectionUtils" ref="connectionUtils"></property>
    </bean>
</beans>