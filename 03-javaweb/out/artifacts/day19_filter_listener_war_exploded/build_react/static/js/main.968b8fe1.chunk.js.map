{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","registerServiceWorker.js","common/sider.js","test.js","AppRouter.js","index.js"],"names":["module","exports","App","props","login","_this","formData","FormData","append","state","username","password","fetch","method","body","then","response","status","json","res","console","log","success","sessionStorage","setItem","JSON","stringify","history","push","pathname","message","info","errorMsg","usernameClick","bind","passwordClick","e","this","setState","target","value","className","placeholder","onChange","Password","type","block","onClick","Component","Boolean","window","location","hostname","match","isLocalhost","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","SubMenu","Menu","menu2","Item","rel","href","Sider","collapsed","userMessage","toggleCollapsed","mes","parse","getItem","style","width","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","key","title","MailOutlined","AppstoreOutlined","overlay","preventDefault","React","Option","Select","TabPane","Tabs","Test","onSelectChange","selectedRowKeys","columns","dataIndex","render","userRole","_role","userStatus","_userStatus","text","record","callback","name","columns2","qiyeDetail","tongguo","bohui","data","pageIndex","area","keyword","role","pageIndex2","state2","data2","visible","visible2","bohuiId","bohuiValue","getList","getList2","param","attr","resultData","records","alert","event","i","length","obj","userId","rowSelection","defaultActiveKey","tab","display","defaultValue","handleChange1","marginLeft","handleChange2","handleChange3","search","float","marginRight","dataSource","changeState","search2","onOk","handleOk","onCancel","handleCancel","bohuiOk","bohuiCancel","AppRoutes","exact","path","component","ReactDOM","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,iPC6E5BC,E,YAtEb,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAsBVC,MAAM,WAEF,IAAIC,EAAK,eAELC,EAAW,IAAIC,SACnBD,EAASE,OAAO,YAAY,EAAKC,MAAMC,UACvCJ,EAASE,OAAO,WAAW,EAAKC,MAAME,UACtCC,MAJU,uCAIA,CACRC,OAAO,OACPC,KAAKR,IACJS,MAAK,SAASC,GACM,MAAlBA,EAASC,QACVD,EAASE,OAAOH,MAAK,SAAUI,GAC3BC,QAAQC,IAAIF,GACTA,EAAIG,SACLC,eAAeC,QAAQ,cAAcC,KAAKC,UAAUP,IACpDd,EAAMF,MAAMwB,QAAQC,KAAK,CACvBC,SAAS,WAGXC,IAAQC,KAAKZ,EAAIa,iBAzC3B,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKzB,MAAQ,CACXC,SAAS,GACTC,SAAS,IANG,E,wHAaJyB,GACZC,KAAKC,SAAS,CACZ5B,SAAS0B,EAAEG,OAAOC,U,oCAGRJ,GACZC,KAAKC,SAAS,CACZ3B,SAASyB,EAAEG,OAAOC,U,+BA8BpB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SAGf,yBAAKA,UAAU,SACb,sFACA,uBAAGA,UAAU,MAAb,qBAAqB,wDACrB,uBAAGA,UAAU,MAAK,kBAAC,IAAD,CAAOC,YAAY,cAAcC,SAAUN,KAAKJ,iBAClE,uBAAGQ,UAAU,SAAb,eAAuB,uDACvB,uBAAGA,UAAU,MAAK,kBAAC,IAAMG,SAAP,CAAgBF,YAAY,iBAAiBC,SAAUN,KAAKF,iBAC9E,uBAAGM,UAAU,MAAK,kBAAC,IAAD,CAAQI,KAAK,UAAUC,OAAK,EAACC,QAASV,KAAKjC,MAAM8B,KAAKG,OAAtD,oC,GA/DZW,aCMEC,QACW,YAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRN,IAAMC,EAAcL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASE,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTzC,MAAK,SAAA6C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrD,QACfgD,UAAUC,cAAcO,WAK1B7C,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB6C,OAAM,SAAAC,GACL/C,QAAQ+C,MAAM,4CAA6CA,M,8DClEzDC,EAAYC,IAAZD,QACFE,EACF,kBAAC,IAAD,KACE,kBAAC,IAAKC,KAAN,KACE,uBAAGhC,OAAO,QAAQiC,IAAI,sBAAsBC,KAAK,KAAjD,8BAMaC,E,2MACjBjE,MAAQ,CACJkE,WAAW,EACXC,YAAY,I,EAQhBC,gBAAkB,WACd,EAAKvC,SAAS,CACVqC,WAAY,EAAKlE,MAAMkE,a,mFAP3B,IAAIG,EAAMrD,KAAKsD,MAAMxD,eAAeyD,QAAQ,gBAC5C3C,KAAKC,SAAS,CACVsC,YAAYE,M,+BAShB,OACA,6BACI,yBAAKrC,UAAU,QACX,wBAAIA,UAAU,SAAd,wCACA,yBAAKwC,MAAO,CAAEC,MAAO,MACjB,kBAAC,IAAD,CACIC,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBC,KAAK,SACLC,MAAM,OACNC,gBAAiBlD,KAAK5B,MAAMkE,WAE5B,kBAACP,EAAD,CACIoB,IAAI,OACJC,MACA,8BACI,kBAACC,EAAA,EAAD,MACA,gDAIJ,kBAAC,IAAKnB,KAAN,CAAWiB,IAAI,KAAf,6BAEJ,kBAACpB,EAAD,CACIoB,IAAI,OACJC,MACA,8BACI,kBAACE,EAAA,EAAD,MACA,4DAIJ,kBAAC,IAAKpB,KAAN,CAAWiB,IAAI,KAAf,4BACA,kBAAC,IAAKjB,KAAN,CAAWiB,IAAI,MAAf,gCAKhB,yBAAK/C,UAAU,UACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAUmD,QAAStB,GACf,uBAAG7B,UAAU,oBAAoBM,QAAS,SAAAX,GAAC,OAAIA,EAAEyD,mBAAjD,kB,GA5DOC,IAAM9C,W,qDCdjC+C,EAAWC,IAAXD,OAEAE,EAAYC,IAAZD,QAEaE,E,YACjB,WAAYhG,GAAO,IAAD,uBACd,4CAAMA,KA8KViG,eAAiB,SAAAC,GACbjF,QAAQC,IAAI,4BAA6BgF,GAC1C,EAAK/D,SAAS,CAAE+D,qBA/Kf,IAAMC,EAAU,CACZ,CACEb,MAAO,2BACPc,UAAW,YACXf,IAAK,aAEP,CACEC,MAAO,eACPc,UAAW,WACXf,IAAK,YAEP,CACEC,MAAO,2BACPc,UAAW,OACXf,IAAK,QAEP,CACEC,MAAO,eACPD,IAAK,QACLe,UAAW,WACXC,OAAO,SAACC,GACJ,IAAIC,EAAQ,GAaV,OAZe,GAAZD,IACCC,EAAQ,gBAEG,GAAZD,IACCC,EAAQ,gBAEG,GAAZD,IACCC,EAAQ,gBAEG,GAAZD,IACCC,EAAQ,gBAELA,IAGf,CACIjB,MAAO,eACPc,UAAW,aACXf,IAAK,aACLgB,OAAO,SAACG,GACJ,IAAIC,EAAc,GAOlB,OANiB,GAAdD,IACCC,EAAc,gBAED,GAAdD,IACCC,EAAc,gBAEXA,IAGf,CACEnB,MAAO,2BACPD,IAAK,cACLe,UAAW,eAEb,CACId,MAAO,eACPD,IAAK,SACLgB,OAAQ,SAACK,EAAMC,GAAP,OACN,8BACE,uBAAG/D,QAAS,EAAKgE,SAAS7E,KAAd,eAAwB2E,IAApC,gBAA+CC,EAAOE,MACtD,kBAAC,IAAD,CAASnE,KAAK,aACd,+CAKNoE,EAAW,CACb,CACExB,MAAO,2BACPc,UAAW,aAEb,CACEd,MAAO,eACPc,UAAW,YAEb,CACEd,MAAO,2BACPc,UAAW,eAEb,CACId,MAAO,2BACPc,UAAW,uBAEf,CACId,MAAO,2BACPc,UAAW,oBAEf,CACId,MAAO,eACPc,UAAW,gBAEf,CACId,MAAO,eACPc,UAAW,WACXC,OAAO,SAACC,GACJ,IAAIC,EAAQ,GAaZ,OAZe,GAAZD,IACCC,EAAQ,gBAEG,GAAZD,IACCC,EAAQ,gBAEG,GAAZD,IACCC,EAAQ,gBAEG,GAAZD,IACCC,EAAQ,gBAELA,IAGf,CACIjB,MAAO,eACPc,UAAW,aACXC,OAAO,SAACG,GACJ,IAAIC,EAAc,GAUlB,OATiB,GAAdD,IACCC,EAAc,gBAED,GAAdD,IACCC,EAAc,sBAED,GAAdD,IACCC,EAAc,gBAEXA,IAGf,CACInB,MAAO,2BACPc,UAAW,aAEf,CACId,MAAO,eACPc,UAAW,GACXC,OAAQ,SAACK,EAAMC,GAAP,OACJ,8BACI,uBAAG/D,QAAS,EAAKmE,WAAWhF,KAAhB,eAA0B2E,IAAtC,wCAAqDC,EAAOE,MAC5D,kBAAC,IAAD,CAASnE,KAAK,aACd,uBAAGE,QAAS,EAAKoE,QAAQjF,KAAb,eAAuB2E,IAAnC,gBACA,kBAAC,IAAD,CAAShE,KAAK,aACd,uBAAGE,QAAS,EAAKqE,MAAMlF,KAAX,eAAqB2E,IAAjC,oBAlJF,OAuJd,EAAKpG,MAAQ,CACX4G,KAAK,GACLf,QAAQA,EACRgB,UAAU,EACVC,KAAK,GACLC,QAAQ,GACRC,KAAK,GACLhH,MAAM,GACNiH,WAAW,EACXrB,gBAAgB,GAChBY,SAASA,EACTU,OAAO,GACPC,MAAM,GACNC,SAAQ,EACRC,UAAS,EACTC,QAAQ,GACRC,WAAW,IAvKC,E,iFA4Kd3F,KAAK4F,UACL5F,KAAK6F,a,gCAQL,IAAI7H,EAAQgC,KAGF8F,EAAM,CACR,UAAY9F,KAAK5B,MAAM6G,UACvB,KAAOjF,KAAK5B,MAAM8G,KAClB,QAAUlF,KAAK5B,MAAM+G,QACrB,KAAOnF,KAAK5B,MAAMgH,KAClB,MAAQpF,KAAK5B,MAAMA,OAEnBH,EAAW,IAAIC,SACnB,IAAI,IAAI6H,KAAQD,EACZ7H,EAASE,OAAO4H,EAAKD,EAAMC,IAG/BxH,MAdM,mDAcI,CAENC,OAAO,OAEPC,KAAKR,IAENS,MAAK,SAAUC,GACO,MAAlBA,EAASC,OACRD,EAASE,OAAOH,MAAK,SAAUI,GAG3B,GADAC,QAAQC,IAAIF,GACTA,EAAIG,QAAQ,CACX,IAAIsG,EAAQzG,EAAIkH,WAAWC,QAC3BjI,EAAMiC,SAAS,CACX+E,KAAKO,SAGT9F,IAAQC,KAAKZ,EAAIa,aAIzBuG,MAAM,6C,+BAKbC,GACLpH,QAAQC,IAAImH,K,oCAGFhG,GACVH,KAAKC,SAAS,CACVmF,KAAKjF,M,oCAGCA,GACVH,KAAKC,SAAS,CACV7B,MAAM+B,M,oCAGAA,GACVH,KAAKC,SAAS,CACViF,KAAK/E,M,+BAITH,KAAK4F,Y,kCAEGzF,GACRH,KAAKC,SAAS,CACVqF,OAAOnF,M,iCAIX,IAAInC,EAAQgC,KAER8F,EAAM,CACN,UAAY9F,KAAK5B,MAAMiH,WACvB,MAAQrF,KAAK5B,MAAMkH,QAEnBrH,EAAW,IAAIC,SACnB,IAAI,IAAI6H,KAAQD,EACZ7H,EAASE,OAAO4H,EAAKD,EAAMC,IAE/BxH,MATU,0DASA,CAENC,OAAO,OAEPC,KAAKR,IAENS,MAAK,SAAUC,GACO,MAAlBA,EAASC,OACRD,EAASE,OAAOH,MAAK,SAAUI,GAG3B,GADAC,QAAQC,IAAIF,GACTA,EAAIG,QAAQ,CAEX,IADA,IAAIsG,EAAQzG,EAAIkH,WAAWC,QACnBG,EAAI,EAAEA,EAAEb,EAAMc,OAAOD,IACzBb,EAAMa,GAAGjD,IAAMiD,EAEnBpI,EAAMiC,SAAS,CACXsF,MAAMA,SAGV9F,IAAQC,KAAKZ,EAAIa,aAIzBuG,MAAM,6C,iCAKPI,GACPvH,QAAQC,IAAIsH,GACZtG,KAAKC,SAAS,CACVuF,SAAS,M,iCAIbxF,KAAKC,SAAS,CACVuF,SAAS,M,qCAIbxF,KAAKC,SAAS,CACVuF,SAAS,M,8BAGTc,GACJ,IACIR,EAAM,CACN,MAAQ,EACR,OAASQ,EAAIC,QAEbtI,EAAW,IAAIC,SACnB,IAAI,IAAI6H,KAAQD,EACZ7H,EAASE,OAAO4H,EAAKD,EAAMC,IAE/BxH,MATU,2DASA,CACNC,OAAO,OACPC,KAAKR,IACNS,MAAK,SAASC,GACQ,MAAlBA,EAASC,OACRD,EAASE,OAAOH,MAAK,SAAUI,GAE3BC,QAAQC,IAAIF,GACTA,EAAIG,QACHQ,IAAQC,KAAKZ,EAAIa,aAMzBuG,MAAM,6C,4BAIZI,GACFtG,KAAKC,SAAS,CACVwF,UAAS,EACTC,QAAQY,EAAIC,W,gCAIhB,IAEIT,EAAM,CACN,MAAQ,EACR,OAJQ9F,KAIO5B,MAAMsH,QACrB,kBALQ1F,KAKkB5B,MAAMuH,YAEhC1H,EAAW,IAAIC,SACnB,IAAI,IAAI6H,KAAQD,EACZ7H,EAASE,OAAO4H,EAAKD,EAAMC,IAE/BxH,MAVU,2DAUA,CACNC,OAAO,OACPC,KAAKR,IACNS,MAAK,SAASC,GACQ,MAAlBA,EAASC,OACRD,EAASE,OAAOH,MAAK,SAAUI,GAE3BC,QAAQC,IAAIF,GACTA,EAAIG,QACHQ,IAAQC,KAAKZ,EAAIa,aAMzBuG,MAAM,6C,oCAMdlG,KAAKC,SAAS,CACVwF,UAAS,M,gCAIbzF,KAAK6F,a,+BAGL,IACMW,EAAe,CACjBxC,gBAFmBhE,KAAK5B,MAAM4F,gBAG9B1D,SAAUN,KAAK+D,gBAEnB,OACA,6BACI,kBAAC,EAAD,MACA,yBAAK3D,UAAU,cACX,yBAAKA,UAAU,OACf,kBAAC,IAAD,CAAMqG,iBAAiB,IAAInG,SAAUN,KAAK0E,SAAS7E,KAAKG,OACpD,kBAAC4D,EAAD,CAAS8C,IAAI,2BAAOvD,IAAI,KACpB,yBAAK/C,UAAU,QACX,gEACA,yBAAKwC,MAAO,CAAC+D,QAAQ,iBACjB,kBAAC,IAAD,CAAQC,aAAa,iCAAQhE,MAAO,CAAEC,MAAO,KAAOvC,SAAUN,KAAK6G,cAAchH,KAAKG,OACtF,kBAAC0D,EAAD,CAAQvD,MAAM,KAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,kBAGJ,0BAAMyC,MAAO,CAACkE,WAAW,SAAzB,sBACA,yBAAKlE,MAAO,CAAC+D,QAAQ,iBACjB,kBAAC,IAAD,CAAQC,aAAa,iCAAQhE,MAAO,CAAEC,MAAO,KAAOvC,SAAUN,KAAK+G,cAAclH,KAAKG,OACtF,kBAAC0D,EAAD,CAAQvD,MAAM,KAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,kBAGJ,0BAAMyC,MAAO,CAACkE,WAAW,SAAzB,kCACA,yBAAKlE,MAAO,CAAC+D,QAAQ,iBACjB,kBAAC,IAAD,CAAQC,aAAa,iCAAQhE,MAAO,CAAEC,MAAO,KAAOvC,SAAUN,KAAKgH,cAAcnH,KAAKG,OACtF,kBAAC0D,EAAD,CAAQvD,MAAM,gBAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,gBAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,gBAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,gBAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,gBAAd,kBAGJ,yBAAKyC,MAAO,CAAC+D,QAAQ,eAAeG,WAAW,SAAS,kBAAC,IAAD,CAAQtG,KAAK,UAAUE,QAASV,KAAKiH,OAAOpH,KAAKG,OAAjD,iBACxD,yBAAK4C,MAAO,CAACsE,MAAM,QAAQC,YAAY,SAAS,kBAAC,IAAD,CAAQ3G,KAAK,WAAb,8BAEpD,yBAAKJ,UAAU,SACX,kBAAC,IAAD,CAAO6D,QAASjE,KAAK5B,MAAM6F,QAASmD,WAAYpH,KAAK5B,MAAM4G,SAGnE,kBAACpB,EAAD,CAAS8C,IAAI,uCAASvD,IAAI,KACtB,yBAAK/C,UAAU,QACX,oDACA,yBAAKwC,MAAO,CAAC+D,QAAQ,iBACjB,kBAAC,IAAD,CAAQC,aAAa,iCAAQhE,MAAO,CAAEC,MAAO,KAAOvC,SAAUN,KAAKqH,YAAYxH,KAAKG,OACpF,kBAAC0D,EAAD,CAAQvD,MAAM,IAAd,gBACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,sBACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,4BACA,kBAACuD,EAAD,CAAQvD,MAAM,KAAd,kBAGJ,kBAAC,IAAD,CAAQK,KAAK,UAAUoC,MAAO,CAAC+D,QAAQ,eAAeG,WAAW,QAASpG,QAASV,KAAKsH,QAAQzH,KAAKG,OAArG,gBACA,kBAAC,IAAD,CAAOwG,aAAcA,EAAcvC,QAASjE,KAAK5B,MAAMwG,SAAUwC,WAAYpH,KAAK5B,MAAMmH,WAIpG,kBAAC,IAAD,CACAnC,MAAM,uCACNoC,QAASxF,KAAK5B,MAAMoH,QACpB+B,KAAMvH,KAAKwH,SAAS3H,KAAKG,MACzByH,SAAUzH,KAAK0H,aAAa7H,KAAKG,OAE7B,+CACA,+CACA,gDAGJ,kBAAC,IAAD,CACAoD,MAAM,2BACNoC,QAASxF,KAAK5B,MAAMqH,SACpB8B,KAAMvH,KAAK2H,QAAQ9H,KAAKG,MACxByH,SAAUzH,KAAK4H,YAAY/H,KAAKG,OAE5B,2BAAG,kBAAC,IAAD,CAAOK,YAAY,2BAAOF,MAAOH,KAAK5B,MAAMuH,sB,GA7cjClC,IAAM9C,WCgBzBkH,EANX,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnK,IACjC,kBAAC,IAAD,CAAOiK,OAAK,EAACC,KAAK,QAAQC,UAAWlE,K,SCL7CmE,IAAS9D,OAAO,kBAAC,IAAD,KACX0D,GACUK,SAASC,eAAe,SJFxB,WACb,GAA6C,kBAAmB/G,UAAW,CAGzE,GADkB,IAAIgH,IAAIC,IAAwBxH,OAAOC,UAC3CwH,SAAWzH,OAAOC,SAASwH,OAIvC,OAGFzH,OAAO0H,iBAAiB,QAAQ,WAC9B,IAAMpH,EAAK,UAAMkH,IAAN,sBAEPpH,IAiDV,SAAiCE,GAE/B5C,MAAM4C,GACHzC,MAAK,SAAAC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAAS6J,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtH,UAAUC,cAAcsH,MAAMjK,MAAK,SAAA6C,GACjCA,EAAaqH,aAAalK,MAAK,WAC7BmC,OAAOC,SAAS+H,eAKpB3H,EAAgBC,MAGnBU,OAAM,WACL9C,QAAQC,IACN,oEArEA8J,CAAwB3H,GAIxBC,UAAUC,cAAcsH,MAAMjK,MAAK,WACjCK,QAAQC,IACN,gHAMJkC,EAAgBC,OIzBxB4H,K","file":"static/js/main.968b8fe1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.less';\nimport { Input } from 'antd';\nimport { message,Button } from 'antd';\n\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.usernameClick = this.usernameClick.bind(this);\n      this.passwordClick = this.passwordClick.bind(this);\n      this.state = {\n        username:'',\n        password:''\n      }\n  }\n  componentDidMount(){\n    \n  }\n  \n  usernameClick(e){\n    this.setState({\n      username:e.target.value\n    });\n  }\n  passwordClick(e){\n    this.setState({\n      password:e.target.value\n    });\n  }\n  login=()=>{\n      //使用history的push方法,实现跳转\n      let _this = this;\n      const url=\"/BackManagerController/backUserLogin\";\n      let formData = new FormData();\n      formData.append('loginName',this.state.username);\n      formData.append('password',this.state.password);\n      fetch(url,{\n        method:'POST',\n        body:formData,\n      }).then(function(response){\n        if(response.status===200){\n          response.json().then(function (res) {\n              console.log(res);\n              if(res.success){\n                sessionStorage.setItem('userMessage',JSON.stringify(res));\n                _this.props.history.push({\n                  pathname:\"/test\"\n                });\n              }else{\n                message.info(res.errorMsg);\n              }\n          })\n        }\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"login-wrap\">\n          <div className=\"left\">\n  \n          </div>\n          <div className=\"right\">\n            <h3>长三角后台管理系统</h3>\n            <p className=\"p1\">用户名<span>（User name）</span></p>\n            <p className=\"p2\"><Input placeholder=\"Basic usage\" onChange={this.usernameClick}/></p>\n            <p className=\"p1 p3\">密码<span>（Password）</span></p>\n            <p className=\"p2\"><Input.Password placeholder=\"input password\" onChange={this.passwordClick}/></p>\n            <p className=\"p4\"><Button type=\"primary\" block onClick={this.login.bind(this)}>立即登录</Button></p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === '0.0.0.0' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport  '../less/sider.less';\r\nimport { Menu, Button,Dropdown } from 'antd';\r\nimport {\r\n    AppstoreOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    ContainerOutlined,\r\n    MailOutlined,\r\n} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nconst { SubMenu } = Menu;\r\nconst menu2 = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <a target=\"_self\" rel=\"noopener noreferrer\" href=\"/\">\r\n          退出登录\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\nexport default class Sider extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n        userMessage:{}\r\n    };\r\n    componentDidMount(){\r\n        let mes = JSON.parse(sessionStorage.getItem('userMessage'));\r\n        this.setState({\r\n            userMessage:mes\r\n        });\r\n    }\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className=\"menu\">\r\n                <h3 className=\"title\" >后台管理系统</h3>\r\n                <div style={{ width: 240}}>\r\n                    <Menu\r\n                        defaultSelectedKeys={['1']}\r\n                        defaultOpenKeys={['sub1']}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        inlineCollapsed={this.state.collapsed}\r\n                        >\r\n                        <SubMenu\r\n                            key=\"sub1\"\r\n                            title={\r\n                            <span>\r\n                                <MailOutlined />\r\n                                <span>主页</span>\r\n                            </span>\r\n                            }\r\n                            >\r\n                            <Menu.Item key=\"5\">账号管理</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu\r\n                            key=\"sub2\"\r\n                            title={\r\n                            <span>\r\n                                <AppstoreOutlined />\r\n                                <span>日志管理</span>\r\n                            </span>\r\n                            }\r\n                            >\r\n                            <Menu.Item key=\"9\">登录日志</Menu.Item>\r\n                            <Menu.Item key=\"10\">操作日志</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n            <div className=\"header\">\r\n                <div className=\"left\"></div>\r\n                <div className=\"right\">\r\n                    <div className=\"user\">\r\n                        <Dropdown overlay={menu2}>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            admin\r\n                            </a>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","\r\n\r\nimport React from 'react';\r\nimport Sider from './common/sider';\r\nimport './less/test.less';\r\nimport { Tabs } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { Button,message,Input } from 'antd';\r\nimport { Table, Divider, Tag ,Modal} from 'antd';\r\nconst { Option } = Select;\r\nlet _this = this;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class Test extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const columns = [\r\n            {\r\n              title: '账号名称',\r\n              dataIndex: 'telephone',\r\n              key: 'telephone',\r\n            },\r\n            {\r\n              title: '姓名',\r\n              dataIndex: 'realName',\r\n              key: 'realName',\r\n            },\r\n            {\r\n              title: '所属区域',\r\n              dataIndex: 'area',\r\n              key: 'area',\r\n            },\r\n            {\r\n              title: '角色',\r\n              key: 'index',\r\n              dataIndex: 'userRole',\r\n              render:(userRole) => {\r\n                  let _role = '';\r\n                    if(userRole == 0){\r\n                        _role = '企业'\r\n                    }\r\n                    if(userRole == 1){\r\n                        _role = '领导'\r\n                    }\r\n                    if(userRole == 2){\r\n                        _role = '平台'\r\n                    }\r\n                    if(userRole == 3){\r\n                        _role = '专家'\r\n                    }\r\n                    return _role ;\r\n              },\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'userStatus',\r\n                key: 'userStatus',\r\n                render:(userStatus) => {\r\n                    let _userStatus = '';\r\n                    if(userStatus == 0){\r\n                        _userStatus = '启用';\r\n                    }\r\n                    if(userStatus == 2){\r\n                        _userStatus = '禁用';\r\n                    }\r\n                    return _userStatus;\r\n                }\r\n              },\r\n            {\r\n              title: '创建时间',\r\n              key: 'createdTime',\r\n              dataIndex: 'createdTime',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                  <span>\r\n                    <a onClick={this.callback.bind(this,text)}>编辑 {record.name}</a>\r\n                    <Divider type=\"vertical\" />\r\n                    <a>删除</a>\r\n                  </span>\r\n                ),\r\n            },\r\n        ];\r\n        const columns2 = [\r\n            {\r\n              title: '账号名称',\r\n              dataIndex: 'telephone',\r\n            },\r\n            {\r\n              title: '姓名',\r\n              dataIndex: 'realName',\r\n            },\r\n            {\r\n              title: '企业名称',\r\n              dataIndex: 'companyName',\r\n            },\r\n            {\r\n                title: '法人名称',\r\n                dataIndex: 'legalRepresentative',\r\n            },\r\n            {\r\n                title: '联系电话',\r\n                dataIndex: 'contactTelephone',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'contactEmail',\r\n            },\r\n            {\r\n                title: '角色',\r\n                dataIndex: 'userRole',\r\n                render:(userRole) => {\r\n                    let _role = '';\r\n                    if(userRole == 0){\r\n                        _role = '企业'\r\n                    }\r\n                    if(userRole == 1){\r\n                        _role = '领导'\r\n                    }\r\n                    if(userRole == 2){\r\n                        _role = '平台'\r\n                    }\r\n                    if(userRole == 3){\r\n                        _role = '专家'\r\n                    }\r\n                    return _role ;\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'userStatus',\r\n                render:(userStatus) => {\r\n                    let _userStatus = '';\r\n                    if(userStatus == 0){\r\n                        _userStatus = '正常'\r\n                    }\r\n                    if(userStatus == 1){\r\n                        _userStatus = '审核中'\r\n                    }\r\n                    if(userStatus == 2){\r\n                        _userStatus = '停用'\r\n                    }\r\n                    return _userStatus;\r\n                }\r\n            },\r\n            {\r\n                title: '提交时间',\r\n                dataIndex: 'applyTime',\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: '',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <a onClick={this.qiyeDetail.bind(this,text)}>查看企业信息 {record.name}</a>\r\n                        <Divider type=\"vertical\" />\r\n                        <a onClick={this.tongguo.bind(this,text)}>通过</a>\r\n                        <Divider type=\"vertical\" />\r\n                        <a onClick={this.bohui.bind(this,text)}>驳回</a>\r\n                    </span>\r\n                ),\r\n            }\r\n          ];\r\n        this.state = {\r\n          data:[],\r\n          columns:columns,\r\n          pageIndex:1,\r\n          area:'',\r\n          keyword:'',\r\n          role:'',\r\n          state:'',\r\n          pageIndex2:1,\r\n          selectedRowKeys:[],\r\n          columns2:columns2,\r\n          state2:'',\r\n          data2:[],\r\n          visible:false,\r\n          visible2:false,\r\n          bohuiId:'',\r\n          bohuiValue:'',\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getList();\r\n        this.getList2();\r\n    }\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n       this.setState({ selectedRowKeys });\r\n\r\n    };\r\n    getList(){\r\n        let _this = this;\r\n        const url=\"/BackUserForManagerController/getPerformUserList\";\r\n            //请求的参数\r\n            const param={\r\n                \"pageIndex\":this.state.pageIndex,\r\n                \"area\":this.state.area,\r\n                \"keyword\":this.state.keyword,\r\n                \"role\":this.state.role,\r\n                \"state\":this.state.state\r\n            };\r\n            let formData = new FormData();\r\n            for(let attr in param){\r\n                formData.append(attr,param[attr]);\r\n            }\r\n            //调用fetch\r\n            fetch(url,{\r\n                //请求方式\r\n                method:'POST',\r\n                //将请求的参数转成json\r\n                body:formData,\r\n            // 请求的返回值\r\n            }).then(function (response) {\r\n                if(response.status===200){\r\n                    response.json().then(function (res) {\r\n                        //获取请求的返回字段\r\n                        console.log(res);\r\n                        if(res.success){\r\n                            let data2 = res.resultData.records;\r\n                            _this.setState({\r\n                                data:data2\r\n                            });\r\n                        }else{\r\n                            message.info(res.errorMsg);\r\n                        }\r\n                    })\r\n                }else {\r\n                    alert(\"出现一个问题\");\r\n                }\r\n    \r\n            })\r\n    }\r\n    callback(event){\r\n        console.log(event);\r\n\r\n    }\r\n    handleChange1(value) {\r\n        this.setState({\r\n            role:value\r\n        });\r\n    }\r\n    handleChange2(value) {\r\n        this.setState({\r\n            state:value\r\n        });\r\n    }\r\n    handleChange3(value) {\r\n        this.setState({\r\n            area:value\r\n        });\r\n    }\r\n    search(){\r\n        this.getList();\r\n    }\r\n    changeState(value){\r\n        this.setState({\r\n            state2:value\r\n        });\r\n    }\r\n    getList2(){\r\n        let _this = this;\r\n        const url=\"/BackUserForManagerController/getCompanyExamineUserList\";\r\n        let param={\r\n            \"pageIndex\":this.state.pageIndex2,\r\n            \"state\":this.state.state2\r\n        };\r\n        let formData = new FormData();\r\n        for(let attr in param){\r\n            formData.append(attr,param[attr]);\r\n        }\r\n        fetch(url,{\r\n            //请求方式\r\n            method:'POST',\r\n            //将请求的参数转成json\r\n            body:formData,\r\n        // 请求的返回值\r\n        }).then(function (response) {\r\n            if(response.status===200){\r\n                response.json().then(function (res) {\r\n                    //获取请求的返回字段\r\n                    console.log(res);\r\n                    if(res.success){\r\n                        let data2 = res.resultData.records;\r\n                        for(let i = 0;i<data2.length;i++){\r\n                            data2[i].key = i;\r\n                        }\r\n                        _this.setState({\r\n                            data2:data2\r\n                        });\r\n                    }else{\r\n                        message.info(res.errorMsg);\r\n                    }\r\n                })\r\n            }else {\r\n                alert(\"出现一个问题\");\r\n            }\r\n\r\n        })\r\n    }\r\n    qiyeDetail(obj){\r\n        console.log(obj);\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    }\r\n    handleOk(){\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    }\r\n    handleCancel(){\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    }\r\n    tongguo(obj){\r\n        const url=\"/BackUserForManagerController/updateSingUserExamineState\";\r\n        let param={\r\n            \"state\":2,\r\n            \"userId\":obj.userId\r\n        };\r\n        let formData = new FormData();\r\n        for(let attr in param){\r\n            formData.append(attr,param[attr]);\r\n        }\r\n        fetch(url,{\r\n            method:'POST',\r\n            body:formData,\r\n        }).then(function(response){\r\n            if(response.status===200){\r\n                response.json().then(function (res) {\r\n                    //获取请求的返回字段\r\n                    console.log(res);\r\n                    if(res.success){\r\n                        message.info(res.errorMsg);\r\n                    }else{\r\n                        message.info(res.errorMsg);\r\n                    }\r\n                })\r\n            }else {\r\n                alert(\"出现一个问题\");\r\n            }\r\n        })\r\n    }\r\n    bohui(obj){\r\n        this.setState({\r\n            visible2:true,\r\n            bohuiId:obj.userId\r\n        });\r\n    }\r\n    bohuiOk(){\r\n        let _this = this;\r\n        const url=\"/BackUserForManagerController/updateSingUserExamineState\";\r\n        let param={\r\n            \"state\":3,\r\n            \"userId\":_this.state.bohuiId,\r\n            \"returnReasonsDesc\":_this.state.bohuiValue\r\n        };\r\n        let formData = new FormData();\r\n        for(let attr in param){\r\n            formData.append(attr,param[attr]);\r\n        }\r\n        fetch(url,{\r\n            method:'POST',\r\n            body:formData,\r\n        }).then(function(response){\r\n            if(response.status===200){\r\n                response.json().then(function (res) {\r\n                    //获取请求的返回字段\r\n                    console.log(res);\r\n                    if(res.success){\r\n                        message.info(res.errorMsg);\r\n                    }else{\r\n                        message.info(res.errorMsg);\r\n                    }\r\n                })\r\n            }else {\r\n                alert(\"出现一个问题\");\r\n            }\r\n        })\r\n\r\n    }\r\n    bohuiCancel(){\r\n        this.setState({\r\n            visible2:false,\r\n        });\r\n    }\r\n    search2(){\r\n        this.getList2();\r\n    }\r\n    render() {\r\n        const selectedRowKeys= this.state.selectedRowKeys;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n        };\r\n        return (\r\n        <div>\r\n            <Sider></Sider>\r\n            <div className=\"wrap clear\">\r\n                <div className=\"tab\">\r\n                <Tabs defaultActiveKey=\"1\" onChange={this.callback.bind(this)}>\r\n                    <TabPane tab=\"账号管理\" key=\"1\" >\r\n                        <div className=\"zhgl\">\r\n                            <span>选择角色：</span>\r\n                            <div style={{display:'inline-block'}}>\r\n                                <Select defaultValue=\"请选择角色\" style={{ width: 120 }} onChange={this.handleChange1.bind(this)} >\r\n                                <Option value=\"2\">平台</Option>\r\n                                <Option value=\"0\">企业</Option>\r\n                                <Option value=\"1\">领导</Option>\r\n                                <Option value=\"3\">专家</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <span style={{marginLeft:'20px'}}>状态：</span>\r\n                            <div style={{display:'inline-block'}}>\r\n                                <Select defaultValue=\"请选择状态\" style={{ width: 120 }} onChange={this.handleChange2.bind(this)} >\r\n                                <Option value=\"0\">正常</Option>\r\n                                <Option value=\"2\">停用</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <span style={{marginLeft:'20px'}}>所属区域：</span>\r\n                            <div style={{display:'inline-block'}}>\r\n                                <Select defaultValue=\"请选择区域\" style={{ width: 120 }} onChange={this.handleChange3.bind(this)} >\r\n                                <Option value=\"上海\">上海</Option>\r\n                                <Option value=\"浙江\">浙江</Option>\r\n                                <Option value=\"江苏\">江苏</Option>\r\n                                <Option value=\"福建\">福建</Option>\r\n                                <Option value=\"厦门\">厦门</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div style={{display:'inline-block',marginLeft:'20px'}}><Button type=\"primary\" onClick={this.search.bind(this)}>查询</Button></div>\r\n                            <div style={{float:'right',marginRight:'20px'}}><Button type=\"primary\">新建账号</Button></div>\r\n                        </div>\r\n                        <div className=\"table\">\r\n                            <Table columns={this.state.columns} dataSource={this.state.data} />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"账号审核管理\" key=\"2\">\r\n                        <div className=\"zhgl\">\r\n                            <span>状态：</span>\r\n                            <div style={{display:'inline-block'}}>\r\n                                <Select defaultValue=\"请选择状态\" style={{ width: 120 }} onChange={this.changeState.bind(this)} >\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">待审核</Option>\r\n                                <Option value=\"2\">审核通过</Option>\r\n                                <Option value=\"3\">驳回</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <Button type=\"primary\" style={{display:'inline-block',marginLeft:'20px'}} onClick={this.search2.bind(this)}>查询</Button>\r\n                            <Table rowSelection={rowSelection} columns={this.state.columns2} dataSource={this.state.data2} />\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n                <Modal\r\n                title=\"查看企业信息\"\r\n                visible={this.state.visible}\r\n                onOk={this.handleOk.bind(this)}\r\n                onCancel={this.handleCancel.bind(this)}\r\n                >\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                </Modal>\r\n\r\n                <Modal\r\n                title=\"驳回原因\"\r\n                visible={this.state.visible2}\r\n                onOk={this.bohuiOk.bind(this)}\r\n                onCancel={this.bohuiCancel.bind(this)}\r\n                >\r\n                    <p><Input placeholder=\"驳回原因\" value={this.state.bohuiValue} /></p>\r\n                </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n/**\r\n * Created by zhqmac on 2018/5/11.\r\n */\r\nimport React from 'react';\r\n// import { Router, Route, hashHistory } from 'react-router';\r\nimport {\r\n    Route\r\n} from 'react-router-dom';\r\n// import './ajax.js';\r\nimport App from './App';\r\nimport Test from './test';\r\nimport './index.css';\r\n/**\r\n * Routes: https://github.com/reactjs/react-router/blob/master/docs/API.md#route\r\n *\r\n * Routes are used to declare your view hierarchy.\r\n *\r\n * Say you go to http://material-ui.com/#/components/paper\r\n * The react router will search for a route named 'paper' and will recursively render its\r\n * handler and its parent handler like so: Paper > Components > Master\r\n */\r\nconst AppRoutes = (\r\n    <div>\r\n        <Route exact path=\"/\" component={App}/>\r\n        <Route exact path=\"/test\" component={Test}/>\r\n    </div>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'antd/dist/antd.css';\nimport AppRoutes from \"./AppRouter\";\nimport {\n    HashRouter,\n} from 'react-router-dom';\nimport { Icon } from 'antd';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nReactDOM.render(<HashRouter>\n    {AppRoutes}\n</HashRouter>, document.getElementById('root'));\nregisterServiceWorker();\n\n\n"],"sourceRoot":""}